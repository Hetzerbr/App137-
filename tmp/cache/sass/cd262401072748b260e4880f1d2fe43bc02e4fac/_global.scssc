3.2.12 (Media Mark)
02a1a81102cc6857a82cd5c56913b180ff78daa0
o:Sass::Tree::RootNode
:@template"û*//
// Global Foundation Mixins
//

$experimental: true !default;

// We use this to control border radius.
@mixin radius($radius:$global-radius) {
  @if $radius {
    @if $experimental {
      -webkit-border-radius: $radius;
    }
    border-radius: $radius;
  }
}

// We use this to create equal side border radius on elements.
@mixin side-radius($side, $radius:$global-radius) {
  @if $side == left {
    @if $experimental {
      -moz-border-radius-bottomleft: $radius;
      -moz-border-radius-topleft: $radius;
      -webkit-border-bottom-left-radius: $radius;
      -webkit-border-top-left-radius: $radius;
    }
    border-bottom-left-radius: $radius;
    border-top-left-radius: $radius;
  }
  @else if $side == right {
    @if $experimental {
      -moz-border-radius-topright: $radius;
      -moz-border-radius-bottomright: $radius;
      -webkit-border-top-right-radius: $radius;
      -webkit-border-bottom-right-radius: $radius;
    }
    border-top-right-radius: $radius;
    border-bottom-right-radius: $radius;
  }
  @else if $side == top {
    @if $experimental {
      -moz-border-radius-topright: $radius;
      -moz-border-radius-topleft: $radius;
      -webkit-border-top-right-radius: $radius;
      -webkit-border-top-left-radius: $radius;
    }
    border-top-right-radius: $radius;
    border-top-left-radius: $radius;
  }
  @else if $side == bottom {
    @if $experimental {
      -moz-border-radius-bottomright: $radius;
      -moz-border-radius-bottomleft: $radius;
      -webkit-border-bottom-right-radius: $radius;
      -webkit-border-bottom-left-radius: $radius;
    }
    border-bottom-right-radius: $radius;
    border-bottom-left-radius: $radius;
  }
}

// We can control whether or not we have inset shadows edges.
@mixin inset-shadow($active:true) {
  @if $experimental {
    -webkit-box-shadow: $shiny-edge-size $shiny-edge-color inset;
  }
  box-shadow: $shiny-edge-size $shiny-edge-color inset;

  @if $active { &:active {
    @if $experimental {
      -webkit-box-shadow: $shiny-edge-size $shiny-edge-active-color inset;
    }
    box-shadow: $shiny-edge-size $shiny-edge-active-color inset; } }
}

// We use this to add transitions to elements
@mixin single-transition($property:all, $speed:300ms, $ease:ease-out) {
  @if $experimental {
    -webkit-transition: $property $speed $ease;
    -moz-transition: $property $speed $ease;
  }
  transition: $property $speed $ease;
}

// We use this to add box-sizing across browser prefixes
@mixin box-sizing($type:border-box) {
  @if $experimental {
    -moz-box-sizing: $type;
    -webkit-box-sizing: $type;
  }
  box-sizing: $type;
}

// We use this to create equilateral triangles
@mixin css-triangle($triangle-size, $triangle-color, $triangle-direction) {
  content: "";
  display: block;
  width: 0;
  height: 0;
  border: inset $triangle-size;
  @if ($triangle-direction == top) {
    border-color: $triangle-color transparent transparent transparent;
    border-top-style: solid;
  }
  @if ($triangle-direction == bottom) {
    border-color: transparent transparent $triangle-color transparent;
    border-bottom-style: solid;
  }
  @if ($triangle-direction == left) {
    border-color: transparent transparent transparent $triangle-color;
    border-left-style: solid;
  }
  @if ($triangle-direction == right) {
    border-color: transparent $triangle-color transparent transparent;
    border-right-style: solid;
  }
}

// We use this to do clear floats
@mixin clearfix() {
  *zoom:1;
  &:before, &:after { content: " "; display: table; }
  &:after { clear: both; }
}


// We use this to add a glowing effect to block elements
@mixin block-glowing-effect($selector:focus, $fade-time:300ms, $glowing-effect-color:fade-out($primary-color, .25)) {
  @if $experimental {
    -webkit-transition: -webkit-box-shadow $fade-time, border-color $fade-time ease-in-out;
    -moz-transition: -moz-box-shadow $fade-time, border-color $fade-time ease-in-out;
  }
  transition: box-shadow $fade-time, border-color $fade-time ease-in-out;

  &:#{$selector} {
    @if $experimental {
      -webkit-box-shadow: 0 0 5px $glowing-effect-color;
      -moz-box-shadow: 0 0 5px $glowing-effect-color;
    }
    box-shadow: 0 0 5px $glowing-effect-color;
    border-color: $glowing-effect-color;
  }
}

//
// Foundation Variables
//

// The default font-size is set to 100% of the browser style sheet (usually 16px)
// for compatibility with brower-based text zoom or user-set defaults.

// Since the typical default browser font-size is 16px, that makes the calculation for grid size.
// If you want your base font-size to be different and not have it effect the grid breakpoints,
// set $em-base to $base-font-size and make sure $base-font-size is a px value.
$base-font-size: 100% !default;

// $base-line-height is 24px while $base-font-size is 16px
$base-line-height: 150% !default;

// This is the default html and body font-size for the base em value.
$em-base: 16px !default;

// It strips the unit of measure and returns it
@function strip-unit($num) {
  @return $num / ($num * 0 + 1);
}

// New Syntax, allows to optionally calculate on a different base value to counter compounding effect of em's.
// Call with 1, 2, 3 or 4 parameters, 'px' is not required but supported
// em-calc(10 20 30px 40);
// Space delimited, if you want to delimit using comma's, wrap it in another pair of brackets
// em-calc((10, 20, 30, 40px));
// Optionally call with a different base (eg: 8px) to calculate em.
// em-calc(16px 32px 48px, 8px);
// If you require to comma separate your list
// em-calc((16px, 32px, 48), 8px);

@function convert-to-em($value, $base-value: $em-base)  {
  $value: strip-unit($value) / strip-unit($base-value) * 1em;
  @if ($value == 0em) { $value: 0; } // Turn 0em into 0
  @return $value;
}

@function em-calc($values, $base-value: $em-base) {
  $max: length($values);

  @if $max == 1 { @return convert-to-em(nth($values, 1), $base-value); }

  $emValues: ();
  @for $i from 1 through $max {
    $emValues: append($emValues, convert-to-em(nth($values, $i), $base-value));
  }
  @return $emValues;
}

// Support for the old syntax

@function emCalc($values){
  @return em-calc($values);
}

// Maybe you want to create rems with pixels
// $rem-base: 0.625 !default; //Set the value corresponding to body font size. In this case, you should set as: body {font-size: 62.5%;}
// @function remCalc($pxWidth) {
//   @return $pxWidth / $rem-base * 1rem;
// }

// We use these to control various global styles
$body-bg: #fff !default;
$body-font-color: #222 !default;
$body-font-family: "Helvetica Neue", "Helvetica", Helvetica, Arial, sans-serif !default;
$body-font-weight: normal !default;
$body-font-style: normal !default;

// We use this to control font-smoothing
$font-smoothing: subpixel-antialiased !default;

// We use these to control text direction settings
$text-direction: ltr !default;

// NOTE: No need to change this conditional statement, $text-direction variable controls it all.
$default-float: left !default;
$opposite-direction: right !default;
@if $text-direction == ltr {
  $default-float: left;
  $opposite-direction: right;
} @else {
  $default-float: right;
  $opposite-direction: left;
}

// We use these as default colors throughout
$primary-color: #2ba6cb !default;
$secondary-color: #e9e9e9 !default;
$alert-color: #c60f13 !default;
$success-color: #5da423 !default;

// We use these to make sure border radius matches unless we want it different.
$global-radius: 3px !default;
$global-rounded: 1000px !default;

// We use these to control inset shadow shiny edges and depressions.
$shiny-edge-size: 0 1px 0 !default;
$shiny-edge-color: rgba(#fff, .5) !default;
$shiny-edge-active-color: rgba(#000, .2) !default;

// We use this to control whether or not CSS classes come through in the gem files.
$include-html-classes: true !default;
$include-print-styles: true !default;
$include-html-global-classes: $include-html-classes !default;

// Media Queries
$small-screen: 768px !default;
$medium-screen: 1280px !default;
$large-screen: 1440px !default;

$screen: "only screen" !default;
$small: "only screen and (min-width: #{$small-screen})" !default;
$medium: "only screen and (min-width:#{$medium-screen})" !default;
$large: "only screen and (min-width:#{$large-screen})" !default;
$landscape: "only screen and (orientation: landscape)" !default;
$portrait: "only screen and (orientation: portrait)" !default;

// Used to provide media query values for javascript components.
meta.foundation-mq-small {
  font-family: $small;
  width: $small-screen;
}

meta.foundation-mq-medium {
  font-family: $medium;
  width: $medium-screen;
}

meta.foundation-mq-large {
  font-family: $large;
  width: $large-screen;
}

//We use this as cursors values for enabling the option of having custom cursors in the whole site's stylesheet
$cursor-crosshair-value: crosshair !default;
$cursor-default-value: default !default;
$cursor-pointer-value: pointer !default;
$cursor-help-value: help !default;
$cursor-text-value: text !default;


@if $include-html-global-classes {

  // Set box-sizing globally to handle padding and border widths
  *,
  *:before,
  *:after {
    @include box-sizing(border-box);
  }

  html,
  body { font-size: $base-font-size; }

  // Default body styles
  body {
    background: $body-bg;
    color: $body-font-color;
    padding: 0;
    margin: 0;
    font-family: $body-font-family;
    font-weight: $body-font-weight;
    font-style: $body-font-style;
    line-height: 1; // Set to $base-line-height to take on browser default of 150%
    position: relative;
    cursor: $cursor-default-value;
  }

a:hover { cursor: $cursor-pointer-value; }

  // Grid Defaults to get images and embeds to work properly
  img,
  object,
  embed { max-width: 100%; height: auto; }

  object,
  embed { height: 100%; }
  img { -ms-interpolation-mode: bicubic; }

  #map_canvas,
  .map_canvas {
    img,
    embed,
    object { max-width: none !important;
    }
  }

  // Miscellaneous useful HTML classes
  .left         { float: left !important; }
  .right        { float: right !important; }
  .text-left    { text-align: left !important; }
  .text-right   { text-align: right !important; }
  .text-center  { text-align: center !important; }
  .text-justify { text-align: justify !important; }
  .hide         { display: none; }

  // Font smoothing
  // Antialiased font smoothing works best for light text on a dark background.
  // Apply to single elements instead of globally to body.
  // Note this only applies to webkit-based desktop browsers on the Mac.
  .antialiased { -webkit-font-smoothing: antialiased; }

  // Get rid of gap under images by making them display: inline-block; by default
  img {
    display: inline-block;
    vertical-align: middle;
  }

  //
  // Global resets for forms
  //

  // Make sure textarea takes on height automatically
  textarea { height: auto; min-height: 50px; }

  // Make select elements 100% width by default
  select { width: 100%; }

}
:@options{ :@has_childrenT:@children[Zo:Sass::Tree::CommentNode
:
@type:silent;@;	[ :@value[")/*
 * Global Foundation Mixins
 * */:
@lineio:Sass::Tree::VariableNode:
@name"experimental:@guarded"!default;@:
@expro:Sass::Script::Bool;@;T;i
;	[ ;i
o;

;;;@;	[ ;["0/* We use this to control border radius. */;io:Sass::Tree::MixinDefNode:@splat0;"radius:
@args[[o:Sass::Script::Variable;"radius;@:@underscored_name"radiuso;	;"global-radius;@;"global_radius;i;@;T;	[u:Sass::Tree::IfNodeó[o:Sass::Script::Variable	:
@name"radius:@options{ :@underscored_name"radius:
@linei0[u:Sass::Tree::IfNodeø[o:Sass::Script::Variable	:
@name"experimental:@options{ :@underscored_name"experimental:
@linei0[o:Sass::Tree::PropNode:@prop_syntax:new:
@tabsi ;["-webkit-border-radius;@:@children[ :@valueo; 	;"radius;@;"radius;	i;	io:Sass::Tree::PropNode:@prop_syntax:new:
@tabsi ;["border-radius;@:@children[ :@valueo; 	;"radius;@;"radius;	i;	i;io;

;;;@;	[ ;["F/* We use this to create equal side border radius on elements. */;io;;0;"side-radius;[[o;;"	side;@;"	side0[o;;"radius;@;"radiuso;	;"global-radius;@;"global_radius;i;@;T;	[u;õ[o:Sass::Script::Operation
:@operator:eq:@operand1o:Sass::Script::Variable	:
@name"	side:@options{ :@underscored_name"	side:
@linei;@	:@operand2o:Sass::Script::String	:
@type:identifier;@	:@value"	left;i;iu:Sass::Tree::IfNodeú[o:Sass::Script::Operation
:@operator:eq:@operand1o:Sass::Script::Variable	:
@name"	side:@options{ :@underscored_name"	side:
@linei";@	:@operand2o:Sass::Script::String	:
@type:identifier;@	:@value"
right;i";i"u:Sass::Tree::IfNodeø[o:Sass::Script::Operation
:@operator:eq:@operand1o:Sass::Script::Variable	:
@name"	side:@options{ :@underscored_name"	side:
@linei,;@	:@operand2o:Sass::Script::String	:
@type:identifier;@	:@value"top;i,;i,u:Sass::Tree::IfNode[o:Sass::Script::Operation
:@operator:eq:@operand1o:Sass::Script::Variable	:
@name"	side:@options{ :@underscored_name"	side:
@linei6;@	:@operand2o:Sass::Script::String	:
@type:identifier;@	:@value"bottom;i6;i60[u:Sass::Tree::IfNode![o:Sass::Script::Variable	:
@name"experimental:@options{ :@underscored_name"experimental:
@linei70[	o:Sass::Tree::PropNode:@prop_syntax:new:
@tabsi ;["#-moz-border-radius-bottomright;@:@children[ :@valueo; 	;"radius;@;"radius;	i8;	i8o;
;;;i ;[""-moz-border-radius-bottomleft;@;[ ;o; 	;"radius;@;"radius;	i9;	i9o;
;;;i ;["'-webkit-border-bottom-right-radius;@;[ ;o; 	;"radius;@;"radius;	i:;	i:o;
;;;i ;["&-webkit-border-bottom-left-radius;@;[ ;o; 	;"radius;@;"radius;	i;;	i;o:Sass::Tree::PropNode:@prop_syntax:new:
@tabsi ;
["border-bottom-right-radius;@	:@children[ ;o;		;
"radius;@	;"radius;i=;i=o;;;;i ;
["border-bottom-left-radius;@	;[ ;o;		;
"radius;@	;"radius;i>;i>[u;[o:Sass::Script::Variable	:
@name"experimental:@options{ :@underscored_name"experimental:
@linei-0[	o:Sass::Tree::PropNode:@prop_syntax:new:
@tabsi ;[" -moz-border-radius-topright;@:@children[ :@valueo; 	;"radius;@;"radius;	i.;	i.o;
;;;i ;["-moz-border-radius-topleft;@;[ ;o; 	;"radius;@;"radius;	i/;	i/o;
;;;i ;["$-webkit-border-top-right-radius;@;[ ;o; 	;"radius;@;"radius;	i0;	i0o;
;;;i ;["#-webkit-border-top-left-radius;@;[ ;o; 	;"radius;@;"radius;	i1;	i1o:Sass::Tree::PropNode:@prop_syntax:new:
@tabsi ;
["border-top-right-radius;@	:@children[ ;o;		;
"radius;@	;"radius;i3;i3o;;;;i ;
["border-top-left-radius;@	;[ ;o;		;
"radius;@	;"radius;i4;i4[u;[o:Sass::Script::Variable	:
@name"experimental:@options{ :@underscored_name"experimental:
@linei#0[	o:Sass::Tree::PropNode:@prop_syntax:new:
@tabsi ;[" -moz-border-radius-topright;@:@children[ :@valueo; 	;"radius;@;"radius;	i$;	i$o;
;;;i ;["#-moz-border-radius-bottomright;@;[ ;o; 	;"radius;@;"radius;	i%;	i%o;
;;;i ;["$-webkit-border-top-right-radius;@;[ ;o; 	;"radius;@;"radius;	i&;	i&o;
;;;i ;["'-webkit-border-bottom-right-radius;@;[ ;o; 	;"radius;@;"radius;	i';	i'o:Sass::Tree::PropNode:@prop_syntax:new:
@tabsi ;
["border-top-right-radius;@	:@children[ ;o;		;
"radius;@	;"radius;i);i)o;;;;i ;
["border-bottom-right-radius;@	;[ ;o;		;
"radius;@	;"radius;i*;i*[u;[o:Sass::Script::Variable	:
@name"experimental:@options{ :@underscored_name"experimental:
@linei0[	o:Sass::Tree::PropNode:@prop_syntax:new:
@tabsi ;[""-moz-border-radius-bottomleft;@:@children[ :@valueo; 	;"radius;@;"radius;	i;	io;
;;;i ;["-moz-border-radius-topleft;@;[ ;o; 	;"radius;@;"radius;	i;	io;
;;;i ;["&-webkit-border-bottom-left-radius;@;[ ;o; 	;"radius;@;"radius;	i;	io;
;;;i ;["#-webkit-border-top-left-radius;@;[ ;o; 	;"radius;@;"radius;	i;	io:Sass::Tree::PropNode:@prop_syntax:new:
@tabsi ;
["border-bottom-left-radius;@	:@children[ ;o;		;
"radius;@	;"radius;i;io;;;;i ;
["border-top-left-radius;@	;[ ;o;		;
"radius;@	;"radius;i ;i ;io;

;;;@;	[ ;["E/* We can control whether or not we have inset shadows edges. */;iBo;;0;"inset-shadow;[[o;;"active;@;"activeo;;@;T;iC;@;T;	[u;¬[o:Sass::Script::Variable	:
@name"experimental:@options{ :@underscored_name"experimental:
@lineiD0[o:Sass::Tree::PropNode:@prop_syntax:new:
@tabsi ;["-webkit-box-shadow;@:@children[ :@valueo:Sass::Script::List	:@separator:
space;@;[o; 	;"shiny-edge-size;@;"shiny_edge_size;	iEo; 	;"shiny-edge-color;@;"shiny_edge_color;	iEo:Sass::Script::String	:
@type:identifier;@;"
inset;	iE;	iE;	iEo:Sass::Tree::PropNode:@prop_syntax:new:
@tabsi ;["box-shadow;@;	[ ;o:Sass::Script::List	:@separator:
space;@;[o;	;"shiny-edge-size;@;"shiny_edge_size;iGo;	;"shiny-edge-color;@;"shiny_edge_color;iGo:Sass::Script::String	;:identifier;@;"
inset;iG;iG;iGu;ò[o:Sass::Script::Variable	:
@name"active:@options{ :@underscored_name"active:
@lineiI0[o:Sass::Tree::RuleNode:
@tabsi :
@rule["&:active:@parsed_ruleso:"Sass::Selector::CommaSequence:@filename" :@members[o:Sass::Selector::Sequence;[o:#Sass::Selector::SimpleSequence
;@:@sourceso:Set:
@hash{ :@subject0;[o:Sass::Selector::Parent;@;	iIo:Sass::Selector::Pseudo
;@;["active:	@arg0:@syntactic_type:
class;	iI;	iI;	iI;@:@has_childrenT:@children[u:Sass::Tree::IfNodeº[o:Sass::Script::Variable	:
@name"experimental:@options{ :@underscored_name"experimental:
@lineiJ0[o:Sass::Tree::PropNode:@prop_syntax:new:
@tabsi ;["-webkit-box-shadow;@:@children[ :@valueo:Sass::Script::List	:@separator:
space;@;[o; 	;"shiny-edge-size;@;"shiny_edge_size;	iKo; 	;"shiny-edge-active-color;@;"shiny_edge_active_color;	iKo:Sass::Script::String	:
@type:identifier;@;"
inset;	iK;	iK;	iKo:Sass::Tree::PropNode:@prop_syntax:new;i ;["box-shadow;@;[ :@valueo:Sass::Script::List	:@separator:
space;@;"[o; 	;"shiny-edge-size;@;"shiny_edge_size;	iMo; 	;"shiny-edge-active-color;@;"shiny_edge_active_color;	iMo:Sass::Script::String	:
@type:identifier;@;""
inset;	iM;	iM;	iM;	iI;iCo;

;;;@;	[ ;["5/* We use this to add transitions to elements */;iPo;;0;"single-transition;[[o;;"property;@;"propertyo;!	;;";@;"all;iQ[o;;"
speed;@;"
speedo:Sass::Script::Number:@original"
300ms;@:@denominator_units[ ;i,;iQ:@numerator_units["ms[o;;"	ease;@;"	easeo;!	;;";@;"ease-out;iQ;@;T;	[u;	[o:Sass::Script::Variable	:
@name"experimental:@options{ :@underscored_name"experimental:
@lineiR0[o:Sass::Tree::PropNode:@prop_syntax:new:
@tabsi ;["-webkit-transition;@:@children[ :@valueo:Sass::Script::List	:@separator:
space;@;[o; 	;"property;@;"property;	iSo; 	;"
speed;@;"
speed;	iSo; 	;"	ease;@;"	ease;	iS;	iS;	iSo;
;;;i ;["-moz-transition;@;[ ;o;	;;;@;[o; 	;"property;@;"property;	iTo; 	;"
speed;@;"
speed;	iTo; 	;"	ease;@;"	ease;	iT;	iT;	iTo;;;;i ;["transition;@;	[ ;o;	;; ;@;[o;	;"property;@;"property;iVo;	;"
speed;@;"
speed;iVo;	;"	ease;@;"	ease;iV;iV;iV;iQo;

;;;@;	[ ;["@/* We use this to add box-sizing across browser prefixes */;iYo;;0;"box-sizing;[[o;;"	type;@;"	typeo;!	;;";@;"border-box;iZ;@;T;	[u;<[o:Sass::Script::Variable	:
@name"experimental:@options{ :@underscored_name"experimental:
@linei[0[o:Sass::Tree::PropNode:@prop_syntax:new:
@tabsi ;["-moz-box-sizing;@:@children[ :@valueo; 	;"	type;@;"	type;	i\;	i\o;
;;;i ;["-webkit-box-sizing;@;[ ;o; 	;"	type;@;"	type;	i];	i]o;;;;i ;["box-sizing;@;	[ ;o;	;"	type;@;"	type;i_;i_;iZo;

;;;@;	[ ;["6/* We use this to create equilateral triangles */;ibo;;0;"css-triangle;[[o;;"triangle-size;@;"triangle_size0[o;;"triangle-color;@;"triangle_color0[o;;"triangle-direction;@;"triangle_direction0;@;T;	[o;;;;i ;["content;@;	[ ;o;!;;";@;""";ido;;;;i ;["display;@;	[ ;o;!;;";@;"
block;ieo;;;;i ;["
width;@;	[ ;o;!;;";@;"0;ifo;;;;i ;["height;@;	[ ;o;!;;";@;"0;igo;;;;i ;["border;@;	[ ;o;	;; ;@;[o;!	;;";@;"
inset;iho;	;"triangle-size;@;"triangle_size;ih;ih;ihu;d[o:Sass::Script::Operation
:@operator:eq:@operand1o:Sass::Script::Variable	:
@name"triangle-direction:@options{ :@underscored_name"triangle_direction:
@lineii;@	:@operand2o:Sass::Script::String	:
@type:identifier;@	:@value"top;ii;ii0[o:Sass::Tree::PropNode:@prop_syntax:new:
@tabsi ;
["border-color;@	:@children[ ;o:Sass::Script::List	:@separator:
space;@	;[	o;		;
"triangle-color;@	;"triangle_color;ijo;	;;;@	;"transparent;ijo;	;;;@	;"transparent;ijo;	;;;@	;"transparent;ij;ij;ijo;;;;i ;
["border-top-style;@	;[ ;o;;;;@	;"
solid;iku;j[o:Sass::Script::Operation
:@operator:eq:@operand1o:Sass::Script::Variable	:
@name"triangle-direction:@options{ :@underscored_name"triangle_direction:
@lineim;@	:@operand2o:Sass::Script::String	:
@type:identifier;@	:@value"bottom;im;im0[o:Sass::Tree::PropNode:@prop_syntax:new:
@tabsi ;
["border-color;@	:@children[ ;o:Sass::Script::List	:@separator:
space;@	;[	o;	;;;@	;"transparent;ino;	;;;@	;"transparent;ino;		;
"triangle-color;@	;"triangle_color;ino;	;;;@	;"transparent;in;in;ino;;;;i ;
["border-bottom-style;@	;[ ;o;;;;@	;"
solid;iou;f[o:Sass::Script::Operation
:@operator:eq:@operand1o:Sass::Script::Variable	:
@name"triangle-direction:@options{ :@underscored_name"triangle_direction:
@lineiq;@	:@operand2o:Sass::Script::String	:
@type:identifier;@	:@value"	left;iq;iq0[o:Sass::Tree::PropNode:@prop_syntax:new:
@tabsi ;
["border-color;@	:@children[ ;o:Sass::Script::List	:@separator:
space;@	;[	o;	;;;@	;"transparent;iro;	;;;@	;"transparent;iro;	;;;@	;"transparent;iro;		;
"triangle-color;@	;"triangle_color;ir;ir;iro;;;;i ;
["border-left-style;@	;[ ;o;;;;@	;"
solid;isu;h[o:Sass::Script::Operation
:@operator:eq:@operand1o:Sass::Script::Variable	:
@name"triangle-direction:@options{ :@underscored_name"triangle_direction:
@lineiu;@	:@operand2o:Sass::Script::String	:
@type:identifier;@	:@value"
right;iu;iu0[o:Sass::Tree::PropNode:@prop_syntax:new:
@tabsi ;
["border-color;@	:@children[ ;o:Sass::Script::List	:@separator:
space;@	;[	o;	;;;@	;"transparent;ivo;		;
"triangle-color;@	;"triangle_color;ivo;	;;;@	;"transparent;ivo;	;;;@	;"transparent;iv;iv;ivo;;;;i ;
["border-right-style;@	;[ ;o;;;;@	;"
solid;iw;ico;

;;;@;	[ ;[")/* We use this to do clear floats */;i{o;;0;"clearfix;[ ;@;T;	[o;;;;i ;["
*zoom;@;	[ ;o;!;;";@;"1;i}o:Sass::Tree::RuleNode;i :
@rule["&:before, &:after:@parsed_ruleso:"Sass::Selector::CommaSequence:@filename" :@members[o:Sass::Selector::Sequence;,[o:#Sass::Selector::SimpleSequence
;+@Þ:@sourceso:Set:
@hash{ :@subject0;,[o:Sass::Selector::Parent;+@Þ;i~o:Sass::Selector::Pseudo
;+@Þ;["before:	@arg0:@syntactic_type:
class;i~;i~o;-;,[o;.
;+@Þ;/o;0;1{ ;20;,[o;3;+@Þ;i~o;4
;+@Þ;["
after;50;6;7;i~;i~;i~;@;T;	[o;;;;i ;["content;@;	[ ;o;!;;";@;"" ";i~o;;;;i ;["display;@;	[ ;o;!;;";@;"
table;i~;i~o;';i ;(["&:after;)o;*;+" ;,[o;-;,[o;.
;+@;/o;0;1{ ;20;,[o;3;+@;io;4
;+@;["
after;50;6;7;i;i;i;@;T;	[o;;;;i ;["
clear;@;	[ ;o;!;;";@;"	both;i;i;i|o;

;;;@;	[ ;["@/* We use this to add a glowing effect to block elements */;i~o;;0;"block-glowing-effect;[[o;;"selector;@;"selectoro;!	;;";@;"
focus;i[o;;"fade-time;@;"fade_timeo;#;$"
300ms;@;%[ ;i,;i;&["ms[o;;"glowing-effect-color;@;"glowing_effect_coloro:Sass::Script::Funcall;0;"fade-out;[o;	;"primary-color;@;"primary_color;io;#;$"	0.25;@;%[ ;f	0.25;i;&[ :@keywords{ ;@;i;@;T;	[u;7[o:Sass::Script::Variable	:
@name"experimental:@options{ :@underscored_name"experimental:
@linei0[o:Sass::Tree::PropNode:@prop_syntax:new:
@tabsi ;["-webkit-transition;@:@children[ :@valueo:Sass::Script::List	:@separator:
comma;@;[o;	;:
space;@;[o:Sass::Script::String	:
@type:identifier;@;"-webkit-box-shadow;	io; 	;"fade-time;@;"fade_time;	i;	io;	;;;@;[o;	;;;@;"border-color;	io; 	;"fade-time;@;"fade_time;	io;	;;;@;"ease-in-out;	i;	i;	i;	io;
;;;i ;["-moz-transition;@;[ ;o;	;;;@;[o;	;;;@;[o;	;;;@;"-moz-box-shadow;	io; 	;"fade-time;@;"fade_time;	i;	io;	;;;@;[o;	;;;@;"border-color;	io; 	;"fade-time;@;"fade_time;	io;	;;;@;"ease-in-out;	i;	i;	i;	io;;;;i ;["transition;@;	[ ;o;	;:
comma;@;[o;	;; ;@;[o;!	;;";@;"box-shadow;io;	;"fade-time;@;"fade_time;i;io;	;; ;@;[o;!	;;";@;"border-color;io;	;"fade-time;@;"fade_time;io;!	;;";@;"ease-in-out;i;i;i;io;';i ;(["&:o;	;"selector;@;"selector;i;@;T;	[u;Ë[o:Sass::Script::Variable	:
@name"experimental:@options{ :@underscored_name"experimental:
@linei0[o:Sass::Tree::PropNode:@prop_syntax:new:
@tabsi ;["-webkit-box-shadow;@:@children[ :@valueo:Sass::Script::List	:@separator:
space;@;[	o:Sass::Script::Number:@original"0;@:@denominator_units[ ;i ;	i:@numerator_units[ o;;"0;@;@;i ;	i;[ o;;"5px;@;[ ;i
;	i;["pxo; 	;"glowing-effect-color;@;"glowing_effect_color;	i;	i;	io;
;;;i ;["-moz-box-shadow;@;[ ;o;	;;;@;[	o;;"0;@;@;i ;	i;[ o;;"0;@;@;i ;	i;[ o;;"5px;@;[ ;i
;	i;["pxo; 	;"glowing-effect-color;@;"glowing_effect_color;	i;	i;	io;;;;i ;["box-shadow;@;	[ ;o;	;; ;@;[	o;#;$"0;@;%@:;i ;i;&[ o;#;$"0;@;%@:;i ;i;&[ o;#;$"5px;@;%[ ;i
;i;&["pxo;	;"glowing-effect-color;@;"glowing_effect_color;i;i;io;;;;i ;["border-color;@;	[ ;o;	;"glowing-effect-color;@;"glowing_effect_color;i;i;i;io;

;;;@;	[ ;["%/*
 * Foundation Variables
 * */;io;

;;;@;	[ ;["/* The default font-size is set to 100% of the browser style sheet (usually 16px)
 * for compatibility with brower-based text zoom or user-set defaults. */;io;

;;;@;	[ ;["/* Since the typical default browser font-size is 16px, that makes the calculation for grid size.
 * If you want your base font-size to be different and not have it effect the grid breakpoints,
 * set $em-base to $base-font-size and make sure $base-font-size is a px value. */;io;;"base-font-size;"!default;@;o;#;$"	100%;@;%[ ;ii;i;&["%;	[ ;io;

;;;@;	[ ;["B/* $base-line-height is 24px while $base-font-size is 16px */;io;;"base-line-height;"!default;@;o;#;$"	150%;@;%[ ;i;i;&["%;	[ ;io;

;;;@;	[ ;["M/* This is the default html and body font-size for the base em value. */;io;;"em-base;"!default;@;o;#;$"	16px;@;%[ ;i;i ;&["px;	[ ;i o;

;;;@;	[ ;["7/* It strips the unit of measure and returns it */;i¢o:Sass::Tree::FunctionNode;0;"strip-unit;[[o;;"num;@;"num0;@;T;	[o:Sass::Tree::ReturnNode	;@;o:Sass::Script::Operation
:@operator:div:@operand1o;	;"num;@;"num;i¤;@:@operand2o;=
;>:	plus;@o;=
;>:
times;@o;	;"num;@;"num;i¤;@;Ao;#;$"0;@;%@:;i ;i¤;&[ ;i¤;@;Ao;#;$"1;@;%@:;i;i¤;&[ ;i¤;i¤;	[ ;i¤;i£o;

;;;@;	[ ;["	/* New Syntax, allows to optionally calculate on a different base value to counter compounding effect of em's.
 * Call with 1, 2, 3 or 4 parameters, 'px' is not required but supported
 * em-calc(10 20 30px 40);
 * Space delimited, if you want to delimit using comma's, wrap it in another pair of brackets
 * em-calc((10, 20, 30, 40px));
 * Optionally call with a different base (eg: 8px) to calculate em.
 * em-calc(16px 32px 48px, 8px);
 * If you require to comma separate your list
 * em-calc((16px, 32px, 48), 8px); */;i§o;;;0;"convert-to-em;[[o;;"
value;@;"
value0[o;;"base-value;@;"base_valueo;	;"em-base;@;"em_base;i±;@;T;	[	o;;"
value;0;@;o;=
;>;C;@o;=
;>;?;@o;8;0;"strip-unit;[o;	;"
value;@;"
value;i²;9{ ;@;i²;@;Ao;8;0;"strip-unit;[o;	;"base-value;@;"base_value;i²;9{ ;@;i²;i²;@;Ao;#;$"1em;@;%[ ;i;i²;&["em;i²;	[ ;i²u;|[o:Sass::Script::Operation
:@operator:eq:@operand1o:Sass::Script::Variable	:
@name"
value:@options{ :@underscored_name"
value:
@linei³;@	:@operand2o:Sass::Script::Number:@original"0em;@	:@denominator_units[ :@valuei ;i³:@numerator_units["em;i³0[o:Sass::Tree::VariableNode;
"
value:@guarded0;@	:
@expro;;"0;@	;[ ;i ;i³;[ :@children[ ;i³o;

;;;@;	[ ;["/* Turn 0em into 0 */;i³o;<	;@;o;	;"
value;@;"
value;i´;	[ ;i´;i±o;;;0;"em-calc;[[o;;"values;@;"values0[o;;"base-value;@;"base_valueo;	;"em-base;@;"em_base;i·;@;T;	[
o;;"max;0;@;o;8;0;"length;[o;	;"values;@;"values;i¸;9{ ;@;i¸;	[ ;i¸u;[o:Sass::Script::Operation
:@operator:eq:@operand1o:Sass::Script::Variable	:
@name"max:@options{ :@underscored_name"max:
@lineiº;@	:@operand2o:Sass::Script::Number:@original"1;@	:@denominator_units[ :@valuei;iº:@numerator_units[ ;iº0[o:Sass::Tree::ReturnNode	;@	:
@expro:Sass::Script::Funcall:@splat0;
"convert-to-em:
@args[o;;0;
"nth;[o;		;
"values;@	;"values;iºo;;"1;@	;@;i;iº;[ :@keywords{ ;@	;iºo;		;
"base-value;@	;"base_value;iº;{ ;@	;iº:@children[ ;iºo;;"emValues;0;@;o;	;; ;@;[ ;i¼;	[ ;i¼o:Sass::Tree::ForNode:
@fromo;#;$"1;@;%@:;i;i½;&[ :@too;	;"max;@;"max;i½;@;T;	[o;;"emValues;0;@;o;8;0;"append;[o;	;"emValues;@;"emValues;i¾o;8;0;"convert-to-em;[o;8;0;"nth;[o;	;"values;@;"values;i¾o;	;"i;@;"i;i¾;9{ ;@;i¾o;	;"base-value;@;"base_value;i¾;9{ ;@;i¾;9{ ;@;i¾;	[ ;i¾:@exclusiveF:	@var"i;i½o;<	;@;o;	;"emValues;@;"emValues;iÀ;	[ ;iÀ;i·o;

;;;@;	[ ;["%/* Support for the old syntax */;iÃo;;;0;"emCalc;[[o;;"values;@;"values0;@;T;	[o;<	;@;o;8;0;"em-calc;[o;	;"values;@;"values;iÆ;9{ ;@;iÆ;	[ ;iÆ;iÅo;

;;;@;	[ ;["/* Maybe you want to create rems with pixels
 * $rem-base: 0.625 !default; //Set the value corresponding to body font size. In this case, you should set as: body {font-size: 62.5%;}
 * @function remCalc($pxWidth) {
 *   @return $pxWidth / $rem-base * 1rem;
 * } */;iÉo;

;;;@;	[ ;["8/* We use these to control various global styles */;iÏo;;"body-bg;"!default;@;o:Sass::Script::Color	:@attrs{	:rediÿ:
greeniÿ:
alphai:	blueiÿ;@;0;iÐ;	[ ;iÐo;;"body-font-color;"!default;@;o;I	;J{	;Ki';Li';Mi;Ni';@;0;iÑ;	[ ;iÑo;;"body-font-family;"!default;@;o;	;;:;@;[
o;!	;:string;@;"Helvetica Neue;iÒo;!	;;O;@;"Helvetica;iÒo;!	;;";@;"Helvetica;iÒo;!	;;";@;"
Arial;iÒo;!	;;";@;"sans-serif;iÒ;iÒ;	[ ;iÒo;;"body-font-weight;"!default;@;o;!	;;";@;"normal;iÓ;	[ ;iÓo;;"body-font-style;"!default;@;o;!	;;";@;"normal;iÔ;	[ ;iÔo;

;;;@;	[ ;["0/* We use this to control font-smoothing */;iÖo;;"font-smoothing;"!default;@;o;!	;;";@;"subpixel-antialiased;i×;	[ ;i×o;

;;;@;	[ ;[":/* We use these to control text direction settings */;iÙo;;"text-direction;"!default;@;o;!	;;";@;"ltr;iÚ;	[ ;iÚo;

;;;@;	[ ;["h/* NOTE: No need to change this conditional statement, $text-direction variable controls it all. */;iÜo;;"default-float;"!default;@;o;!	;;";@;"	left;iÝ;	[ ;iÝo;;"opposite-direction;"!default;@;o;!	;;";@;"
right;iÞ;	[ ;iÞu;¼[o:Sass::Script::Operation
:@operator:eq:@operand1o:Sass::Script::Variable	:
@name"text-direction:@options{ :@underscored_name"text_direction:
@lineiß;@	:@operand2o:Sass::Script::String	:
@type:identifier;@	:@value"ltr;iß;ißu:Sass::Tree::IfNode÷[00[o:Sass::Tree::VariableNode:
@name"default-float:@guarded0:@options{ :
@expro:Sass::Script::String	:
@type:identifier;@	:@value"
right:
@lineiã:@children[ ;ião; ;"opposite-direction;0;@	;	o;
	;;;@	;"	left;iä;[ ;iä[o:Sass::Tree::VariableNode;
"default-float:@guarded0;@	:
@expro;	;;;@	;"	left;ià:@children[ ;iào;;
"opposite-direction;0;@	;o;	;;;@	;"
right;iá;[ ;iáo;

;;;@;	[ ;["4/* We use these as default colors throughout */;iço;;"primary-color;"!default;@;o;I	;J{	;Ki0;Li¦;Mi;NiË;@;0;iè;	[ ;ièo;;"secondary-color;"!default;@;o;I	;J{	;Kié;Lié;Mi;Nié;@;0;ié;	[ ;iéo;;"alert-color;"!default;@;o;I	;J{	;KiÆ;Li;Mi;Ni;@;0;iê;	[ ;iêo;;"success-color;"!default;@;o;I	;J{	;Kib;Li¤;Mi;Ni(;@;0;ië;	[ ;iëo;

;;;@;	[ ;["W/* We use these to make sure border radius matches unless we want it different. */;iío;;"global-radius;"!default;@;o;#;$"3px;@;%[ ;i;iî;&["px;	[ ;iîo;;"global-rounded;"!default;@;o;#;$"1000px;@;%[ ;iè;iï;&["px;	[ ;iïo;

;;;@;	[ ;["L/* We use these to control inset shadow shiny edges and depressions. */;iño;;"shiny-edge-size;"!default;@;o;	;; ;@;[o;#;$"0;@;%@:;i ;iò;&[ o;#;$"1px;@;%[ ;i;iò;&["pxo;#;$"0;@;%@:;i ;iò;&[ ;iò;	[ ;iòo;;"shiny-edge-color;"!default;@;o;8;0;"	rgba;[o;I	;J{	;Kiÿ;Liÿ;Mi;Niÿ;@;0;ióo;#;$"0.5;@;%@:;f0.5;ió;&[ ;9{ ;@;ió;	[ ;ióo;;"shiny-edge-active-color;"!default;@;o;8;0;"	rgba;[o;I	;J{	;Ki ;Li ;Mi;Ni ;@;0;iôo;#;$"0.2;@;%@:;f0.20000000000000001 ;iô;&[ ;9{ ;@;iô;	[ ;iôo;

;;;@;	[ ;["[/* We use this to control whether or not CSS classes come through in the gem files. */;iöo;;"include-html-classes;"!default;@;o;;@;T;i÷;	[ ;i÷o;;"include-print-styles;"!default;@;o;;@;T;iø;	[ ;iøo;;" include-html-global-classes;"!default;@;o;	;"include-html-classes;@;"include_html_classes;iù;	[ ;iùo;

;;;@;	[ ;["/* Media Queries */;iûo;;"small-screen;"!default;@;o;#;$"
768px;@;%[ ;i ;iü;&["px;	[ ;iüo;;"medium-screen;"!default;@;o;#;$"1280px;@;%[ ;i ;iý;&["px;	[ ;iýo;;"large-screen;"!default;@;o;#;$"1440px;@;%[ ;i ;iþ;&["px;	[ ;iþo;;"screen;"!default;@;o;!	;;O;@;"only screen;i ;	[ ;i o;;"
small;"!default;@;o:&Sass::Script::StringInterpolation
:@aftero;!	;;O;@;");i:	@mido;	;"small-screen;@;"small_screen;i;@:@beforeo;!	;;O;@;"!only screen and (min-width: ;i;i;	[ ;io;;"medium;"!default;@;o;P
;Qo;!	;;O;@;");i;Ro;	;"medium-screen;@;"medium_screen;i;@;So;!	;;O;@;" only screen and (min-width:;i;i;	[ ;io;;"
large;"!default;@;o;P
;Qo;!	;;O;@;");i;Ro;	;"large-screen;@;"large_screen;i;@;So;!	;;O;@;" only screen and (min-width:;i;i;	[ ;io;;"landscape;"!default;@;o;!	;;O;@;"-only screen and (orientation: landscape);i;	[ ;io;;"portrait;"!default;@;o;!	;;O;@;",only screen and (orientation: portrait);i;	[ ;io;

;;;@;	[ ;["H/* Used to provide media query values for javascript components. */;io;';i ;(["meta.foundation-mq-small;)o;*;+" ;,[o;-;,[o;.
;+@;/o;0;1{ ;20;,[o:Sass::Selector::Element	;+@;["	meta:@namespace0;io:Sass::Selector::Class;+@;["foundation-mq-small;i;i;i;@;T;	[o;;;;i ;["font-family;@;	[ ;o;	;"
small;@;"
small;i	;i	o;;;;i ;["
width;@;	[ ;o;	;"small-screen;@;"small_screen;i
;i
;io;';i ;(["meta.foundation-mq-medium;)o;*;+" ;,[o;-;,[o;.
;+@¢;/o;0;1{ ;20;,[o;T	;+@¢;["	meta;U0;io;V;+@¢;["foundation-mq-medium;i;i;i;@;T;	[o;;;;i ;["font-family;@;	[ ;o;	;"medium;@;"medium;i;io;;;;i ;["
width;@;	[ ;o;	;"medium-screen;@;"medium_screen;i;i;io;';i ;(["meta.foundation-mq-large;)o;*;+" ;,[o;-;,[o;.
;+@Ã;/o;0;1{ ;20;,[o;T	;+@Ã;["	meta;U0;io;V;+@Ã;["foundation-mq-large;i;i;i;@;T;	[o;;;;i ;["font-family;@;	[ ;o;	;"
large;@;"
large;i;io;;;;i ;["
width;@;	[ ;o;	;"large-screen;@;"large_screen;i;i;io;

;;;@;	[ ;["w/*We use this as cursors values for enabling the option of having custom cursors in the whole site's stylesheet */;io;;"cursor-crosshair-value;"!default;@;o;!	;;";@;"crosshair;i;	[ ;io;;"cursor-default-value;"!default;@;o;!	;;";@;"default;i;	[ ;io;;"cursor-pointer-value;"!default;@;o;!	;;";@;"pointer;i;	[ ;io;;"cursor-help-value;"!default;@;o;!	;;";@;"	help;i;	[ ;io;;"cursor-text-value;"!default;@;o;!	;;";@;"	text;i;	[ ;iu;[o:Sass::Script::Variable	:
@name" include-html-global-classes:@options{ :@underscored_name" include_html_global_classes:
@linei0[!o:Sass::Tree::CommentNode
:
@type:silent;@:@children[ :@value["F/* Set box-sizing globally to handle padding and border widths */;	i!o:Sass::Tree::RuleNode:
@tabsi :
@rule["*,
  *:before,
  *:after:@parsed_ruleso:"Sass::Selector::CommaSequence:@filename" :@members[o:Sass::Selector::Sequence;[o:#Sass::Selector::SimpleSequence
;@:@sourceso:Set:
@hash{ :@subject0;[o:Sass::Selector::Universal;@:@namespace0;	i$;	i$o;;["
o;
;@;o;;{ ;0;[o;;@;0;	i$o:Sass::Selector::Pseudo
;@;["before:	@arg0:@syntactic_type:
class;	i$;	i$o;;["
o;
;@;o;;{ ;0;[o;;@;0;	i$o;
;@;["
after;0; ;!;	i$;	i$;	i$;@:@has_childrenT;[o:Sass::Tree::MixinNode:@splat0;"box-sizing:
@args[o:Sass::Script::String	;:identifier;@;"border-box;	i%:@keywords{ ;@;[ ;	i%;	i$o;;i ;["html,
  body;o;;" ;[o;;[o;
;@>;o;;{ ;0;[o:Sass::Selector::Element	;@>;["	html;0;	i);	i)o;;["
o;
;@>;o;;{ ;0;[o;)	;@>;["	body;0;	i);	i);	i);@;"T;[o:Sass::Tree::PropNode:@prop_syntax:new;i ;["font-size;@;[ ;o; 	;"base-font-size;@;"base_font_size;	i);	i);	i)o;

;;;@;[ ;["/* Default body styles */;	i+o;;i ;["	body;o;;" ;[o;;[o;
;@c;o;;{ ;0;[o;)	;@c;["	body;0;	i,;	i,;	i,;@;"T;[o;*;+;,;i ;["background;@;[ ;o; 	;"body-bg;@;"body_bg;	i-;	i-o;*;+;,;i ;["
color;@;[ ;o; 	;"body-font-color;@;"body_font_color;	i.;	i.o;*;+;,;i ;["padding;@;[ ;o;&;;';@;"0;	i/o;*;+;,;i ;["margin;@;[ ;o;&;;';@;"0;	i0o;*;+;,;i ;["font-family;@;[ ;o; 	;"body-font-family;@;"body_font_family;	i1;	i1o;*;+;,;i ;["font-weight;@;[ ;o; 	;"body-font-weight;@;"body_font_weight;	i2;	i2o;*;+;,;i ;["font-style;@;[ ;o; 	;"body-font-style;@;"body_font_style;	i3;	i3o;*;+;,;i ;["line-height;@;[ ;o;&;;';@;"1;	i4o;

;;;@;[ ;["F/* Set to $base-line-height to take on browser default of 150% */;	i4o;*;+;,;i ;["position;@;[ ;o;&;;';@;"relative;	i5o;*;+;,;i ;["cursor;@;[ ;o; 	;"cursor-default-value;@;"cursor_default_value;	i6;	i6;	i,o;;i ;["a:hover;o;;" ;[o;;[o;
;@´;o;;{ ;0;[o;)	;@´;["a;0;	i9o;
;@´;["
hover;0; ;!;	i9;	i9;	i9;@;"T;[o;*;+;,;i ;["cursor;@;[ ;o; 	;"cursor-pointer-value;@;"cursor_pointer_value;	i9;	i9;	i9o;

;;;@;[ ;["B/* Grid Defaults to get images and embeds to work properly */;	i;o;;i ;["img,
  object,
  embed;o;;" ;[o;;[o;
;@Ò;o;;{ ;0;[o;)	;@Ò;["img;0;	i>;	i>o;;["
o;
;@Ò;o;;{ ;0;[o;)	;@Ò;["object;0;	i>;	i>o;;["
o;
;@Ò;o;;{ ;0;[o;)	;@Ò;["
embed;0;	i>;	i>;	i>;@;"T;[o;*;+;,;i ;["max-width;@;[ ;o;&;;';@;"	100%;	i>o;*;+;,;i ;["height;@;[ ;o;&;;';@;"	auto;	i>;	i>o;;i ;["object,
  embed;o;;" ;[o;;[o;
;@;o;;{ ;0;[o;)	;@;["object;0;	iA;	iAo;;["
o;
;@;o;;{ ;0;[o;)	;@;["
embed;0;	iA;	iA;	iA;@;"T;[o;*;+;,;i ;["height;@;[ ;o;&;;';@;"	100%;	iA;	iAo;;i ;["img;o;;" ;[o;;[o;
;@";o;;{ ;0;[o;)	;@";["img;0;	iB;	iB;	iB;@;"T;[o;*;+;,;i ;["-ms-interpolation-mode;@;[ ;o;&;;';@;"bicubic;	iB;	iBo;;i ;["#map_canvas,
  .map_canvas;o;;" ;[o;;[o;
;@8;o;;{ ;0;[o:Sass::Selector::Id;@8;["map_canvas;	iE;	iEo;;["
o;
;@8;o;;{ ;0;[o:Sass::Selector::Class;@8;["map_canvas;	iE;	iE;	iE;@;"T;[o;;i ;["img,
    embed,
    object;o;;" ;[o;;[o;
;@R;o;;{ ;0;[o;)	;@R;["img;0;	iH;	iHo;;["
o;
;@R;o;;{ ;0;[o;)	;@R;["
embed;0;	iH;	iHo;;["
o;
;@R;o;;{ ;0;[o;)	;@R;["object;0;	iH;	iH;	iH;@;"T;[o;*;+;,;i ;["max-width;@;[ ;o;&;;';@;"none !important;	iH;	iH;	iEo;

;;;@;[ ;[",/* Miscellaneous useful HTML classes */;	iLo;;i ;["
.left;o;;" ;[o;;[o;
;@;o;;{ ;0;[o;.;@;["	left;	iM;	iM;	iM;@;"T;[o;*;+;,;i ;["
float;@;[ ;o;&;;';@;"left !important;	iM;	iMo;;i ;[".right;o;;" ;[o;;[o;
;@;o;;{ ;0;[o;.;@;["
right;	iN;	iN;	iN;@;"T;[o;*;+;,;i ;["
float;@;[ ;o;&;;';@;"right !important;	iN;	iNo;;i ;[".text-left;o;;" ;[o;;[o;
;@¬;o;;{ ;0;[o;.;@¬;["text-left;	iO;	iO;	iO;@;"T;[o;*;+;,;i ;["text-align;@;[ ;o;&;;';@;"left !important;	iO;	iOo;;i ;[".text-right;o;;" ;[o;;[o;
;@Â;o;;{ ;0;[o;.;@Â;["text-right;	iP;	iP;	iP;@;"T;[o;*;+;,;i ;["text-align;@;[ ;o;&;;';@;"right !important;	iP;	iPo;;i ;[".text-center;o;;" ;[o;;[o;
;@Ø;o;;{ ;0;[o;.;@Ø;["text-center;	iQ;	iQ;	iQ;@;"T;[o;*;+;,;i ;["text-align;@;[ ;o;&;;';@;"center !important;	iQ;	iQo;;i ;[".text-justify;o;;" ;[o;;[o;
;@î;o;;{ ;0;[o;.;@î;["text-justify;	iR;	iR;	iR;@;"T;[o;*;+;,;i ;["text-align;@;[ ;o;&;;';@;"justify !important;	iR;	iRo;;i ;["
.hide;o;;" ;[o;;[o;
;@;o;;{ ;0;[o;.;@;["	hide;	iS;	iS;	iS;@;"T;[o;*;+;,;i ;["display;@;[ ;o;&;;';@;"	none;	iS;	iSo;

;;;@;[ ;["â/* Font smoothing
 * Antialiased font smoothing works best for light text on a dark background.
 * Apply to single elements instead of globally to body.
 * Note this only applies to webkit-based desktop browsers on the Mac. */;	iUo;;i ;[".antialiased;o;;" ;[o;;[o;
;@;o;;{ ;0;[o;.;@;["antialiased;	iY;	iY;	iY;@;"T;[o;*;+;,;i ;["-webkit-font-smoothing;@;[ ;o;&;;';@;"antialiased;	iY;	iYo;

;;;@;[ ;["W/* Get rid of gap under images by making them display: inline-block; by default */;	i[o;;i ;["img;o;;" ;[o;;[o;
;@8;o;;{ ;0;[o;)	;@8;["img;0;	i\;	i\;	i\;@;"T;[o;*;+;,;i ;["display;@;[ ;o;&;;';@;"inline-block;	i]o;*;+;,;i ;["vertical-align;@;[ ;o;&;;';@;"middle;	i^;	i\o;

;;;@;[ ;["(/*
 * Global resets for forms
 * */;	iao;

;;;@;[ ;[";/* Make sure textarea takes on height automatically */;	ieo;;i ;["textarea;o;;" ;[o;;[o;
;@\;o;;{ ;0;[o;)	;@\;["textarea;0;	if;	if;	if;@;"T;[o;*;+;,;i ;["height;@;[ ;o;&;;';@;"	auto;	ifo;*;+;,;i ;["min-height;@;[ ;o;&;;';@;"	50px;	if;	ifo;

;;;@;[ ;["5/* Make select elements 100% width by default */;	iho;;i ;["select;o;;" ;[o;;[o;
;@|;o;;{ ;0;[o;)	;@|;["select;0;	ii;	ii;	ii;@;"T;[o;*;+;,;i ;["
width;@;[ ;o;&;;';@;"	100%;	ii;	ii;i